{"version":3,"sources":["Components/Form.jsx","Pages/Inform.jsx","Components/Circle.jsx","Components/Test.jsx","Pages/MainPage.jsx","tests.csv","Occluder.png","Occluder_Mirror.png","Rectangle.png","Store/store.jsx","App.jsx","index.jsx"],"names":["Form","onSubmit","useForm","register","handleSubmit","reset","className","data","placeholder","type","Inform","history","useHistory","style","width","textAlign","margins","display","flexDirection","justifyContent","onClick","push","observer","verticalMovement","circleId","store","translateValue","positionValue","reversedOccluder","top","transform","useSpring","immediate","config","duration","to","next","cancel","a","delay","color","left","onStart","setStartingRecordedTime","isLettersChanged","changeLetters","from","opacity","complexAnim","circleStyle","position","padding","border","borderRadius","height","alignItems","fontSize","div","rotationDegrees","circleLLetter","circleRLetter","handleKeyPress","event","isStartTest","code","endTest","console","log","startTest","useEffect","document","addEventListener","margin","src","selectedOccluder","alt","backgroundColor","zIndex","isTrialConcluded","lastReactionTimeString","MainPage","path","exact","Store","constructor","usedLetterList","circleLInitialLetter","circleRInitialLetter","thirdLetter","initialTime","keyPressTime","testNo","isFirstTestBlock","isTestEnded","isTestBlocksSet","reactionTimes","tests","firstTestSet","secondTestSet","currentTest","setUpTestBlocks","this","firstBlock","getRandomNumber","filter","test","randomizeTestLists","makeAutoObservable","deep","readRemoteFile","file","complete","results","reactionTime","shuffle","selectTestFromList","length","isSecondTestBlock","concludeTrial","currentTestArray","applyTestParameters","occluderType","occluderOrientation","letterMatchType","circleShowLetter","rectangle","mirrorOccluder","occluder","setInitialLetters","rand1","tempNumber","rand2","noMatchScenario","matchCongruentScenario","matchIncongruentScenario","getUnusedCharacter","min","max","Math","floor","random","unusedCharacterList","letter","chosenLetter","round","setInitialValues","getTime","Date","setKeyPress","pressedKey","isGotMatch","currentTime","letterCombination","testName","lastReactionTime","window","addRow","setReversedOccluder","isReversed","incrementTestNo","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2209d233.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Form = ({ onSubmit }) => {\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmitForm = (data) => {\n    onSubmit(data);\n    reset();\n  };\n\n  return (\n    <form className=\"mainForm\" onSubmit={handleSubmit(onSubmitForm)}>\n      <input placeholder=\"Name\" {...register(\"name\")} />\n      <input placeholder=\"First Name\" {...register(\"firstName\")} />\n      <input placeholder=\"Age\" {...register(\"age\")} />\n      <input placeholder=\"Gender\" {...register(\"gender\")} />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Inform = () => {\n  const history = useHistory();\n\n  return (\n    <div style={{ width: \"50vw\", textAlign: \"justify\", margins: \"auto\" }}>\n      <h1>Inform</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec\n        odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla\n        quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent\n        mauris. Fusce nec tellus sed augue semper porta. Mauris massa.\n        Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad\n        litora torquent per conubia nostra, per inceptos himenaeos. Curabitur\n        sodales ligula in libero.\n      </p>\n\n      <p>\n        Sed dignissim lacinia nunc. Curabitur tortor. Pellentesque nibh. Aenean\n        quam. In scelerisque sem at dolor. Maecenas mattis. Sed convallis\n        tristique sem. Proin ut ligula vel nunc egestas porttitor. Morbi lectus\n        risus, iaculis vel, suscipit quis, luctus non, massa. Fusce ac turpis\n        quis ligula lacinia aliquet. Mauris ipsum. Nulla metus metus,\n        ullamcorper vel, tincidunt sed, euismod in, nibh. Quisque volutpat\n        condimentum velit. Class aptent taciti sociosqu ad litora torquent per\n        conubia nostra, per inceptos himenaeos.\n      </p>\n\n      <p>\n        Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque\n        adipiscing diam, a cursus ipsum ante quis turpis. Nulla facilisi. Ut\n        fringilla. Suspendisse potenti. Nunc feugiat mi a tellus consequat\n        imperdiet. Vestibulum sapien. Proin quam. Etiam ultrices. Suspendisse in\n        justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus\n        magna. Quisque cursus, metus vitae pharetra auctor, sem massa mattis\n        sem, at interdum magna augue eget diam. Vestibulum ante ipsum primis in\n        faucibus orci luctus et ultrices posuere cubilia Curae; Morbi lacinia\n        molestie dui.\n      </p>\n\n      <p>\n        Praesent blandit dolor. Sed non quam. In vel mi sit amet augue congue\n        elementum. Morbi in ipsum sit amet pede facilisis laoreet. Donec lacus\n        nunc, viverra nec, blandit vel, egestas et, augue. Vestibulum tincidunt\n        malesuada tellus. Ut ultrices ultrices enim. Curabitur sit amet mauris.\n        Morbi in dui quis est pulvinar ullamcorper. Nulla facilisi. Integer\n        lacinia sollicitudin massa. Cras metus. Sed aliquet risus a tortor.\n        Integer id quam.\n      </p>\n\n      <p>\n        Morbi mi. Quisque nisl felis, venenatis tristique, dignissim in,\n        ultrices sit amet, augue. Proin sodales libero eget ante. Nulla quam.\n        Aenean laoreet. Vestibulum nisi lectus, commodo ac, facilisis ac,\n        ultricies eu, pede. Ut orci risus, accumsan porttitor, cursus quis,\n        aliquet eget, justo. Sed pretium blandit orci. Ut eu diam at pede\n        suscipit sodales. Aenean lectus elit, fermentum non, convallis id,\n        sagittis at, neque. Nullam mauris orci, aliquet et, iaculis et, viverra\n        vitae, ligula. Nulla ut felis in purus aliquam imperdiet.{\" \"}\n      </p>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <button type=\"button\" onClick={() => history.push(\"/\")}>\n          BACK\n        </button>\n        <button type=\"button\" onClick={() => history.push(\"/test\")}>\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Inform;\n","/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { observer } from \"mobx-react\";\n\nconst Circle = ({ circleId, store }) => {\n  // Show/HideLetter animation duration\n  const diplayLetterAnimDuration = 250;\n\n  // Delay from start to ShowLetter animation\n  const showLetterDelay = 500;\n\n  // Delay from start to HideLetter animation\n  const hideLetterDelay = 500;\n\n  const translateValue =\n    circleId === \"R\" ? \"translate(-110%, -50%)\" : \"translate(10%, -50%)\";\n\n  const positionValue = circleId === \"R\" ? \"100%\" : \"0%\";\n\n  let verticalMovement;\n\n  if (store.reversedOccluder) {\n    verticalMovement =\n      circleId === \"R\"\n        ? { top: \"0%\", transform: \"translate(-50%, 10%)\" }\n        : { top: \"100%\", transform: \"translate(-50%, -110%)\" };\n  } else {\n    verticalMovement =\n      circleId === \"R\"\n        ? { top: \"100%\", transform: \"translate(-50%, -110%)\" }\n        : { top: \"0%\", transform: \"translate(-50%, 10%)\" };\n  }\n\n  const [complexAnim, complexApi] = useSpring(() => ({\n    immediate: true,\n    config: { duration: 800 },\n    to: async (next, cancel) => {\n      await next({\n        config: { duration: diplayLetterAnimDuration },\n        delay: showLetterDelay,\n        color: \"black\",\n      });\n      await next({\n        config: { duration: diplayLetterAnimDuration },\n        delay: hideLetterDelay,\n        color: \"white\",\n      });\n      await next({ left: \"50%\", transform: \"translate(-50%, -50%)\" });\n      await next({ ...verticalMovement });\n      await next({\n        config: { duration: 0 },\n        color: \"black\",\n        onStart: () => {\n          store.setStartingRecordedTime();\n          if (!store.isLettersChanged) {\n            store.changeLetters();\n          }\n        },\n      });\n    },\n    from: {\n      left: positionValue,\n      transform: translateValue,\n      top: \"50%\",\n      opacity: 1,\n      color: \"white\",\n    },\n  }));\n\n  let circleStyle = {\n    position: \"absolute\",\n    padding: 10,\n    display: \"flex\",\n    border: \"1px solid black\",\n    borderRadius: \"50%\",\n    width: 75,\n    height: 75,\n    transform: translateValue,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 64,\n    color: \"white\",\n  };\n\n  if (circleId === \"R\") {\n    circleStyle = {\n      ...circleStyle,\n      left: \"100%\",\n    };\n  }\n\n  return (\n    <animated.div style={{ ...circleStyle, ...complexAnim }}>\n      <p style={{ transform: `rotate(-${store.rotationDegrees}deg)` }}>\n        {circleId === \"L\" ? store.circleLLetter : store.circleRLetter}\n      </p>\n    </animated.div>\n  );\n};\n\nexport default observer(Circle);\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport Circle from \"./Circle\";\n\nconst Test = ({ store }) => {\n  const handleKeyPress = (event) => {\n    if (!store.isStartTest) {\n      store.startTest();\n    } else if (event.code === \"ControlLeft\" || event.code === \"ControlRight\") {\n      store.endTest(event.code);\n    } else {\n      console.log(\"OTHER KEY PRESSED\", event.code);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: \"800px\",\n        height: \"800px\",\n        margin: \"auto\",\n        position: \"relative\",\n        padding: 0,\n      }}\n    >\n      {store.isStartTest ? (\n        <div\n          style={{\n            transform: `rotate(${store.rotationDegrees}deg)`,\n            height: \"100%\",\n          }}\n        >\n          <img\n            src={store.selectedOccluder}\n            alt=\"occluder\"\n            style={{\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              height: \"450px\",\n              transform: \"translate(-50%, -50%)\",\n              backgroundColor: \"white\",\n              zIndex: \"100\",\n            }}\n          />\n          <Circle circleId=\"L\" store={store} />\n          <Circle circleId=\"R\" store={store} />\n        </div>\n      ) : store.isTrialConcluded ? (\n        <div>Trial concluded. Thank you.</div>\n      ) : (\n        <div\n          style={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <h1>Press ANY KEY to start test</h1>\n          <h3>{store.lastReactionTimeString}</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default observer(Test);\n","import React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Form from \"../Components/Form\";\nimport Inform from \"./Inform\";\nimport Test from \"../Components/Test\";\nimport \"./MainPage.css\";\n\nconst MainPage = ({ store }) => {\n  const history = useHistory();\n  // eslint-disable-next-line no-unused-vars\n  const onSubmit = (data) => {\n    history.push(\"/inform\");\n  };\n\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Form onSubmit={onSubmit} />\n        </Route>\n        <Route path=\"/inform\">\n          <Inform />\n        </Route>\n        <Route path=\"/test\">\n          <Test store={store} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default MainPage;\n","export default __webpack_public_path__ + \"static/media/tests.902c332a.csv\";","export default __webpack_public_path__ + \"static/media/Occluder.f2484492.png\";","export default __webpack_public_path__ + \"static/media/Occluder_Mirror.89cdd026.png\";","export default __webpack_public_path__ + \"static/media/Rectangle.0d41d51b.png\";","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable import/no-useless-path-segments */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable no-param-reassign */\nimport { makeAutoObservable } from \"mobx\";\n// import { ipcRenderer } from \"electron\";\nimport { getTime } from \"date-fns\";\nimport { readRemoteFile } from \"react-papaparse\";\nimport { shuffle } from \"underscore\";\nimport file from \"../../src/tests.csv\";\nimport occluder from \"../../src/Occluder.png\";\nimport mirrorOccluder from \"../../src/Occluder_Mirror.png\";\nimport rectangle from \"../../src/Rectangle.png\";\n\nclass Store {\n  usedLetterList = [\"K\", \"M\", \"P\", \"S\", \"T\", \"V\"];\n\n  rotationDegrees = 0;\n\n  reversedOccluder = false;\n\n  circleLLetter = \"\";\n\n  circleLInitialLetter = \"\";\n\n  circleRLetter = \"\";\n\n  circleRInitialLetter = \"\";\n\n  thirdLetter = \"\";\n\n  initialTime = 0;\n\n  keyPressTime = 0;\n\n  testNo = 0;\n\n  isFirstTestBlock = true;\n\n  isLettersChanged = false;\n\n  isTestEnded = false;\n\n  isStartTest = false;\n\n  isTrialConcluded = false;\n\n  isTestBlocksSet = false;\n\n  reactionTimes = [];\n\n  lastReactionTime;\n\n  lastReactionTimeString = \"\";\n\n  tests = [];\n\n  firstTestSet = [];\n\n  secondTestSet = [];\n\n  currentTest = [];\n\n  selectedOccluder;\n\n  isGotMatch;\n\n  occluderType;\n\n  occluderOrientation;\n\n  letterMatchType;\n\n  circleShowLetter;\n\n  constructor() {\n    makeAutoObservable(this, {}, { deep: false });\n    readRemoteFile(file, {\n      complete: (results) => {\n        this.tests = results.data;\n        this.setUpTestBlocks();\n      },\n    });\n  }\n\n  get reactionTime() {\n    return this.keyPressTime - this.initialTime;\n  }\n\n  setUpTestBlocks = () => {\n    if (this.isTestBlocksSet) {\n      return;\n    }\n\n    this.isTestBlocksSet = true;\n\n    let firstBlock;\n\n    if (this.getRandomNumber(0, 1) === 0) {\n      firstBlock = \"bl1\";\n    } else {\n      firstBlock = \"bl2\";\n    }\n\n    this.firstTestSet = this.tests.filter((test) => test[0] === firstBlock);\n    this.secondTestSet = this.tests.filter((test) => test[0] !== firstBlock);\n\n    this.randomizeTestLists();\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  randomizeTestLists() {\n    this.firstTestSet = shuffle(this.firstTestSet);\n    this.secondTestSet = shuffle(this.secondTestSet);\n  }\n\n  selectTestFromList() {\n    if (this.testNo > this.firstTestSet.length - 1 && this.isFirstTestBlock) {\n      this.testNo = 0;\n      this.isFirstTestBlock = false;\n    }\n\n    if (this.testNo > this.secondTestSet.length - 1 && this.isSecondTestBlock) {\n      this.isTrialConcluded = true;\n      this.concludeTrial();\n      return;\n    }\n\n    if (this.isFirstTestBlock) {\n      this.currentTestArray = this.firstTestSet[this.testNo];\n    } else {\n      this.currentTestArray = this.secondTestSet[this.testNo];\n    }\n\n    this.testNo += 1;\n\n    this.rotationDegrees = this.getRandomNumber(0, 175);\n\n    this.applyTestParameters();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  concludeTrial() {}\n\n  applyTestParameters() {\n    this.occluderType = this.currentTestArray[0];\n    this.occluderOrientation = this.currentTestArray[1];\n    this.letterMatchType = this.currentTestArray[2];\n    this.circleShowLetter = this.currentTestArray[3];\n\n    if (this.occluderOrientation === \"lev\") {\n      this.reversedOccluder = true;\n    } else {\n      this.reversedOccluder = false;\n    }\n\n    if (this.occluderType === \"bl2\") {\n      this.selectedOccluder = rectangle;\n    } else if (this.reversedOccluder === true) {\n      this.selectedOccluder = mirrorOccluder;\n    } else {\n      this.selectedOccluder = occluder;\n    }\n\n    this.setInitialLetters();\n  }\n\n  setInitialLetters() {\n    this.isLettersChanged = false;\n\n    const rand1 = this.getRandomNumber(0, this.usedLetterList.length - 1);\n    let tempNumber = this.getRandomNumber(0, this.usedLetterList.length - 1);\n    while (tempNumber === rand1) {\n      tempNumber = this.getRandomNumber(0, this.usedLetterList.length - 1);\n    }\n    const rand2 = tempNumber;\n\n    this.circleLLetter = this.usedLetterList[rand1];\n    this.circleLInitialLetter = this.usedLetterList[rand1];\n    this.circleRLetter = this.usedLetterList[rand2];\n    this.circleRInitialLetter = this.usedLetterList[rand2];\n  }\n\n  changeLetters() {\n    this.isLettersChanged = true;\n\n    this.thirdLetter = \"\";\n\n    switch (this.letterMatchType) {\n      case \"nm\":\n        this.noMatchScenario();\n        break;\n      case \"mc\":\n        this.matchCongruentScenario();\n        break;\n      case \"mi\":\n        this.matchIncongruentScenario();\n        break;\n      case \"m\":\n        this.matchCongruentScenario();\n        break;\n      default:\n        break;\n    }\n  }\n\n  noMatchScenario() {\n    this.thirdLetter = this.getUnusedCharacter();\n\n    if (this.circleShowLetter === \"d2\") {\n      this.circleLLetter = \" \";\n      this.circleRLetter = this.thirdLetter;\n    } else {\n      this.circleRLetter = \" \";\n      this.circleLLetter = this.thirdLetter;\n    }\n  }\n\n  matchCongruentScenario() {\n    if (this.circleShowLetter === \"d2\") {\n      this.circleLLetter = \" \";\n      this.thirdLetter = this.circleRLetter;\n    } else {\n      this.circleRLetter = \" \";\n      this.thirdLetter = this.circleLLetter;\n    }\n  }\n\n  matchIncongruentScenario() {\n    this.circleRLetter = this.circleLInitialLetter;\n    this.circleLLetter = this.circleRInitialLetter;\n\n    if (this.circleShowLetter === \"d2\") {\n      this.circleLLetter = \" \";\n      this.thirdLetter = this.circleRLetter;\n    } else {\n      this.circleRLetter = \" \";\n      this.thirdLetter = this.circleLLetter;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  getUnusedCharacter() {\n    const unusedCharacterList = [...this.usedLetterList].filter(\n      (letter) =>\n        letter !== this.circleLInitialLetter &&\n        letter !== this.circleRInitialLetter\n    );\n\n    let chosenLetter;\n\n    if (Math.floor(Math.random()) === 0) {\n      chosenLetter =\n        unusedCharacterList[\n          this.getRandomNumber(0, unusedCharacterList.length - 1)\n        ];\n    } else if (Math.round(Math.random()) === 0) {\n      chosenLetter = this.circleLInitialLetter;\n    } else {\n      chosenLetter = this.circleRInitialLetter;\n    }\n\n    return chosenLetter;\n  }\n\n  setInitialValues() {\n    this.initialTime = 0;\n    this.keyPressTime = 0;\n    this.setInitialLetters();\n  }\n\n  setStartingRecordedTime() {\n    this.initialTime = getTime(new Date());\n    console.log(\"RECORDING STARTED\");\n  }\n\n  setKeyPress(pressedKey) {\n    console.log(\"KEY PRESSED\");\n\n    if (pressedKey === \"ControlRight\" && this.letterMatchType === \"nm\") {\n      this.isGotMatch = true;\n    } else if (\n      pressedKey === \"ControlLeft\" &&\n      (this.letterMatchType === \"m\" ||\n        this.letterMatchType === \"mi\" ||\n        this.letterMatchType === \"mc\")\n    ) {\n      this.isGotMatch = true;\n    } else {\n      this.isGotMatch = false;\n    }\n\n    const currentTime = getTime(new Date());\n    if (this.keyPressTime === 0) {\n      this.keyPressTime = currentTime;\n      const letterCombination = `${this.circleLInitialLetter}${this.circleRInitialLetter}${this.thirdLetter}`;\n      const testName = `${this.occluderType}_${this.occluderOrientation}_${this.letterMatchType}_${this.circleShowLetter}_${letterCombination}_${this.rotationDegrees}`;\n      console.log(\"KEYPRESS RECORDED\");\n      console.log(\"Reaction time: \", this.reactionTime);\n      this.lastReactionTime = [testName, this.reactionTime, this.isGotMatch];\n      this.lastReactionTimeString = `Test name: ${testName} \\n Reaction time: ${this.reactionTime} \\n Correct answer: ${this.isGotMatch}`;\n      this.reactionTimes.push(this.lastReactionTime);\n      window.addRow.addRow(this.lastReactionTime);\n      console.log(\"All results: \", this.reactionTimes);\n    } else {\n      console.log(\"A KEYPRESS WAS ALREADY RECORDED\");\n    }\n  }\n\n  setReversedOccluder(isReversed) {\n    this.reversedOccluder = isReversed;\n  }\n\n  incrementTestNo() {\n    this.testNo += 1;\n  }\n\n  startTest() {\n    this.isTestEnded = false;\n    this.isStartTest = true;\n\n    this.currentTestArray = this.selectTestFromList();\n  }\n\n  endTest(pressedKey) {\n    this.isTestEnded = true;\n\n    if (this.initialTime !== 0) {\n      this.isStartTest = false;\n\n      this.setKeyPress(pressedKey);\n      this.setInitialValues();\n    }\n  }\n}\n\nexport default Store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MainPage from \"./Pages/MainPage\";\nimport Store from \"./Store/store\";\n\nfunction App() {\n  const store = new Store();\n\n  return <MainPage store={store} />;\n}\n\nexport default App;\n","/* eslint-disable */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { makeObservable, observable, action } from \"mobx-react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <Router>\n      <App />\n    </Router>\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}